devtools::install_github('nickbeeton/passe')
library(passe)
library(ape)
library(diversitree)
library(microbenchmark)
library(viridisLite)
library(fields)
library(rgl)
N.reps = 20L
v = 1:N.reps
N.species = 10000L
N.runs = 500L
L = list.files('bee069', pattern = 'mle.*')
which.runs = sort(as.integer(gsub('[^0-9]', '', L)))
bisse.mle.all = passe.naive.mle.all = passe.2010.mle.all = array(NA, c(2,2,N.reps*N.runs, 6))
bisse.mle.ll.all = passe.naive.mle.ll.all = passe.2010.mle.ll.all = array(NA, c(2,2,N.reps*N.runs))
bisse.ll.all = passe.naive.ll.all = passe.2010.ll.all = matrix(NA, N.reps*N.runs)
pars.all = matrix(NA, N.reps*N.runs, 6)
pars.bm.all = matrix(NA, N.reps*N.runs, 6)
tree.length = numeric(nrow(pars.all))
for (i in 1:N.runs)
{
print(i)
runs = which.runs[i]
load(sprintf('bee069/mles %d.Rdata', runs))
passe.naive.mle.ll.all[,,v + N.reps*(i-1)] = passe.naive.mle.ll
passe.2010.mle.ll.all[,,v + N.reps*(i-1)] = passe.2010.mle.ll
bisse.mle.ll.all[,,v + N.reps*(i-1)] = bisse.mle.ll
passe.naive.mle.all[,,v + N.reps*(i-1),] = passe.naive.mle
passe.2010.mle.all[,,v + N.reps*(i-1),] = passe.2010.mle
bisse.mle.all[,,v + N.reps*(i-1),] = bisse.mle
load(sprintf('bee069/LLs %d.Rdata', runs))
passe.naive.ll.all[v + N.reps*(i-1)] = passe.naive.ll
passe.2010.ll.all[v + N.reps*(i-1)] = passe.2010.ll
bisse.ll.all[v + N.reps*(i-1)] = bisse.ll
load(sprintf('bee069/random trees %d.Rdata', runs))
pars.all[v + N.reps*(i-1),] = pars
for (j in 1:N.reps)
tree.length[j + N.reps * (i-1)] = max(node.depth.edgelength(trees[[j]]))
load(sprintf('bee069/random bm trees %d.Rdata', runs))
pars.bm.all[v + N.reps*(i-1),] = pars.bm
}
passe.naive.mle.all = abs(passe.naive.mle.all)
passe.2010.mle.all = abs(passe.2010.mle.all)
bisse.mle.all = abs(bisse.mle.all)
test.tree = fast.bisse(10000L, pars[1,])
